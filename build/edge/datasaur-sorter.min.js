"use strict";!function(){function t(t,n,r,e){var o;return o=r[0]!==e[0]?t(r[0],e[0]):n?e[1]-r[1]:r[1]-e[1]}var n=window.datasaur.indexed,r={numeric:{1:function(t,n){return t-n},"-1":function(t,n){return n-t}},string:{1:function(t,n){return t<n?-1:1},"-1":function(t,n){return n<t?-1:1}}},e=n.extend("DataSourceSorter",{sortOn:function(e,o,i){function a(t){var r=c.getRow(t);return n.valOrFunc(r,d,f)}if(0===o)return void this.clearIndex();o=o||1;for(var u=this.buildIndex(),s=new Array(u.length),c=this.dataSource,l=c.schema[e],d=l&&l.name,f=l&&l.calculator,h=i||l&&l.type||typeof a(0),g=r[h]||r.string,p=g[o],w=o===-1,x=t.bind(this,p,w),S=0;S<u.length;S++)s[S]=[a(S),S];for(s.sort(x),S=0;S<u.length;S++)u[S]=s[S][1]}}),o=n.extend("DataSourceSorterComposite",{initialize:function(){this.last=this.dataSource},newController:function(){return{sorts:[]}},getRow:function(t){return this.last.getRow(t)},sortOn:function(t,n){this.controller.sorts.push({columnIndex:t,direction:n})},apply:function(){var t=this.dataSource;this.controller.sorts.forEach(function(n){t=new e(t),t.sortOn(n.columnIndex,n.direction,n.type)}),this.last=t},clearSorts:function(){this.controller.sorts.length=0,this.last=this.dataSource},getDataIndex:function(t){return this.last.getDataIndex(t)},getValue:function(t,n){return this.last.getValue(t,n)},setValue:function(t,n,r){this.last.setValue(t,n,r)}});Object.defineProperty(o.prototype,"type",{value:"sorter"}),o.addComparator=function(t,n,e){r[t]={1:n,"-1":e}},window.datasaur.sorter=o}();